<?php

/**
 * @file
 * Provides node unpublish functionality.
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\Component\Serialization\Json;
use Drupal\node\Entity\NodeType;

/**
 * Implements hook_entity_type_view.
 */
function ao_task100_unpublish_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  /** @var \Drupal\node\Entity\Node $node */
  $node = $entity;
  if ($display->getComponent('unpublish')) {
    $url = Url::fromRoute('ao_task100_unpublish.node', [
      'node' => $node->id()
    ]);
    $link_options = [
      'attributes' => [
        'class' => [
          'use-ajax',
        ],
        'data-dialog-options' => Json::encode([
        ]),
      ],
    ];
    $url->setOptions($link_options);
    $link = Link::fromTextAndUrl(t('<h3>' . 'Unpublish' . '</h3>'), $url)->toString();
    $build['unpublish']['#markup'] = '<div class="field field-extra-unpublish">' . $link . '</div>';
  }
}

/**
 * Implements hook_entity_extra_field_info().
 *
 */
function ao_task100_unpublish_entity_extra_field_info() {
  $extra = [];
  foreach (NodeType::loadMultiple() as $nodeType) {
    $extra['node'][$nodeType->id()]['display']['unpublish'] = [
      'label' => t('Unpublish'),
      'description' => 'Unpublish',
      'weight' => 0,
      'visible' => FALSE,
    ];
  }
  return $extra;
}

